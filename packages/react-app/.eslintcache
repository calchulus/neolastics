[{"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/index.js":"1","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/App.js":"2","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/NeolasticPage.js":"3","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/GalleryPage.js":"4","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/IntroPage.js":"5","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/helpers/Transactor.js":"6","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/CellsComponent.js":"7","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/IntroNeolasticsComponent.js":"8","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/CollectionsComponent.js":"9","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/GalleryComponent.js":"10","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/index.js":"11","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/hooks/index.js":"12","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/helpers/generator.js":"13","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/Address.js":"14","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/Account.js":"15","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/hooks/Poller.js":"16"},{"size":189,"mtime":1605536661890,"results":"17","hashOfConfig":"18"},{"size":4430,"mtime":1609064475340,"results":"19","hashOfConfig":"18"},{"size":4160,"mtime":1608991604612,"results":"20","hashOfConfig":"18"},{"size":367,"mtime":1609058664066,"results":"21","hashOfConfig":"18"},{"size":9111,"mtime":1609065765652,"results":"22","hashOfConfig":"18"},{"size":2941,"mtime":1608476338492,"results":"23","hashOfConfig":"18"},{"size":409,"mtime":1608798668314,"results":"24","hashOfConfig":"18"},{"size":2016,"mtime":1608990769137,"results":"25","hashOfConfig":"18"},{"size":2646,"mtime":1609066749803,"results":"26","hashOfConfig":"18"},{"size":1884,"mtime":1609064487904,"results":"27","hashOfConfig":"18"},{"size":102,"mtime":1603010320221,"results":"28","hashOfConfig":"18"},{"size":211,"mtime":1608909165678,"results":"29","hashOfConfig":"18"},{"size":1886,"mtime":1608043834919,"results":"30","hashOfConfig":"18"},{"size":1447,"mtime":1603010320218,"results":"31","hashOfConfig":"18"},{"size":2842,"mtime":1609064223377,"results":"32","hashOfConfig":"18"},{"size":517,"mtime":1603010320231,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ubzfkc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/index.js",[],["70","71"],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/App.js",["72"],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/NeolasticPage.js",["73","74","75","76","77","78"],"import React, { Fragment, useState, useEffect} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { gql, useLazyQuery } from '@apollo/client';\nimport CellsComponent from \"./CellsComponent\";\n\nimport { ethers } from 'ethers';\nimport { Button } from \"antd\";\nimport moment from \"moment\";\n/*\nOne piece + actions on one page\n*/\n\nfunction NeolasticPage(props) {\n    let { id } = useParams();\n\n    const NEOLASTIC_QUERY = gql`\n    query Neolastic($id: String!) {\n        neolastic(id: $id) {\n            id\n            created\n            pricePaid\n            owner {\n                id\n            }\n        }\n        curve(id: \"1\") {\n          burnPrice\n        }\n    }\n    `\n\n    const [actionSection, setActionSection] = useState(\"\");\n    const [detailsSection, setDetailsSection] = useState(\"\");\n\n    const [savedData, setSavedData] = useState(null);\n\n    const [ getNeolastic, { loading, error, data }] = useLazyQuery(NEOLASTIC_QUERY, { variables: { id }, fetchPolicy: 'network-only'});\n\n    const wrongNetworkHTML = <Fragment>You are on the wrong network to interact with the Neolastic. Please switch to the correct network.</Fragment>;\n\n    const offlineHTML = <Fragment>\n    [In order to interact with this neolastic, you need to  have a web3/Ethereum-enabled browser and connect it (see top right of the page). Please download\n      the <a href=\"https://metamask.io\">MetaMask Chrome extension</a> or open in an Ethereum-compatible browser.]\n    </Fragment>;\n\n    function burnNeolastic() {\n      props.burnNeolastic(id);\n    }\n\n    useEffect(() => {\n      if(!!data) {\n        if(savedData !== null) {\n            setSavedData(data);\n        } else { setSavedData(data); }\n      }\n\n    }, [data]);\n\n    useEffect(() => {\n\n      if(savedData !== null) {      \n        // set details\n        let detailsHTML = <Fragment>\n          This neolastic does not exist.\n        </Fragment>\n\n        let actionsHTML = \"\";\n        if(savedData.neolastic !== null && typeof savedData.neolastic !== 'undefined') {\n          const created = moment.unix(savedData.neolastic.created).format();\n          detailsHTML = <Fragment>\n              Owner: <Link to={'/gallery/'+savedData.neolastic.owner.id}>{savedData.neolastic.owner.id}.</Link> <br />\n              Created on: {created} <br />\n              Mint Price: {ethers.utils.formatEther(savedData.neolastic.pricePaid)} <br />\n            </Fragment>\n\n          if(typeof props.address !== 'undefined') {\n            if(props.address.toLowerCase() === savedData.neolastic.owner.id) {\n              actionsHTML = <Fragment>\n              <Button type=\"primary\" onClick={burnNeolastic}>\n                Burn\n              </Button> <br />\n              You will receive {ethers.utils.formatEther(savedData.curve.burnPrice)} ETH from the reserve. <br />\n              </Fragment>\n            }\n          }\n        }\n      \n        setDetailsSection(detailsHTML);\n        setActionSection(actionsHTML);\n      }\n    }, [savedData, props.address, props.curveSigner]); \n    // address only comes in injectedId is online\n    // update on signer is necessary if you log back in such that contract functions update their internal state variables\n\n    // provider logic\n    useEffect(() => {\n      if(props.injectedChainId !== props.hardcodedChainId && props.injectedChainId !== null) {\n        setActionSection(wrongNetworkHTML);\n      } else if(props.injectedChainId === props.hardcodedChainId) {\n        // todo: remove statement\n      } else if(props.injectedChainId == null) {\n        setActionSection(offlineHTML);\n      }\n    }, [props.hardcodedChainId]); // TODO: re-add signer coming in\n\n    // update component if a user tx occurred\n    useEffect(() => {\n      if(savedData !== null) {\n          setTimeout(function(){ \n              getNeolastic();\n          }, 2000);\n      } else { getNeolastic(); }\n    }, [props.transactionsExecuted]);\n\n    return (\n        <div className=\"App\" style={{textAlign:'center'}}> \n          <CellsComponent hash={ethers.BigNumber.from(id).toHexString()} />\n          {detailsSection}\n          {actionSection}\n        </div>\n    );\n}\n\nexport default NeolasticPage\n","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/GalleryPage.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/IntroPage.js",["79","80","81"],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/helpers/Transactor.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/CellsComponent.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/IntroNeolasticsComponent.js",["82","83","84","85"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport CellsComponent from \"./CellsComponent\";\nimport { gql, useLazyQuery } from '@apollo/client';\n\nimport { ethers } from 'ethers';\nimport moment from 'moment';\n\n/*\nDisplay a list of Neolastic pieces\n*/\nfunction IntroNeolasticsComponent(props) {\n    const NEOLASTICS_QUERY = gql`\n    {\n        neolastics(orderBy: created, orderDirection: desc, first: 5) {\n            id\n            created\n            pricePaid\n            owner {\n                id\n            }\n        }\n    }\n    `    \n    \n    const [savedData, setSavedData] = useState(null)\n    const [getNeolastics, { loading, error, data }] = useLazyQuery(NEOLASTICS_QUERY, {fetchPolicy: 'network-only'});\n\n    useEffect(() => {\n        if(!!data) {\n            if(savedData!==null) {\n                if(typeof savedData.neolastics[0] !== 'undefined') {\n                if (savedData.neolastics[0].id !== data.neolastics[0].id) {\n                    setSavedData(data);\n                }}\n            } else { setSavedData(data); }\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if(savedData !== null) {\n            setTimeout(function(){ \n                getNeolastics();\n            }, 2000);\n        } else { getNeolastics(); }\n    }, [props.transactionsExecuted]);\n\n    if(!!savedData) {\n        return savedData.neolastics.map(({ id, created, owner}) => (\n            <div key={id} style={{textAlign: 'center'}}>\n                <CellsComponent hash={ethers.BigNumber.from(id).toHexString()}/><br />\n                Owner: <Link to={'/gallery/'+owner.id}>{owner.id}.</Link> <br />\n                Created: {moment.unix(created).format()}   <br />\n                <br />\n                <Link to={'/neolastic/'+id} > <Button type=\"primary\">VIEW + INTERACT WITH PIECE</Button></Link> <br />\n                <br />\n            </div>\n        ));\n    } else { return null; }\n}\n\nexport default IntroNeolasticsComponent\n","/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/CollectionsComponent.js",["86","87","88","89"],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/GalleryComponent.js",["90","91","92"],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/index.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/hooks/index.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/helpers/generator.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/Address.js",[],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/components/Account.js",["93","94","95","96"],"/Users/simondlr2/code/ethereum/onchaingenerator/packages/react-app/src/hooks/Poller.js",["97","98"],"import React, { useEffect, useRef } from 'react';\nexport default function usePoller(fn, delay) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  //run at start too\n  useEffect(() => {\n    fn()\n  }, []);\n}\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":64,"column":6,"nodeType":"105","endLine":64,"endColumn":23,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":37,"column":29,"nodeType":"109","messageId":"110","endLine":37,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":37,"column":38,"nodeType":"109","messageId":"110","endLine":37,"endColumn":43},{"ruleId":"103","severity":1,"message":"112","line":57,"column":8,"nodeType":"105","endLine":57,"endColumn":14,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":91,"column":8,"nodeType":"105","endLine":91,"endColumn":53,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"116","line":104,"column":8,"nodeType":"105","endLine":104,"endColumn":32,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":113,"column":8,"nodeType":"105","endLine":113,"endColumn":36,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"120","line":37,"column":8,"nodeType":"105","endLine":37,"endColumn":52,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"116","line":45,"column":10,"nodeType":"105","endLine":45,"endColumn":34,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":59,"column":60,"nodeType":"125","endLine":59,"endColumn":75},{"ruleId":"107","severity":1,"message":"108","line":28,"column":29,"nodeType":"109","messageId":"110","endLine":28,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":28,"column":38,"nodeType":"109","messageId":"110","endLine":28,"endColumn":43},{"ruleId":"103","severity":1,"message":"112","line":39,"column":8,"nodeType":"105","endLine":39,"endColumn":14,"suggestions":"126"},{"ruleId":"103","severity":1,"message":"127","line":47,"column":8,"nodeType":"105","endLine":47,"endColumn":36,"suggestions":"128"},{"ruleId":"107","severity":1,"message":"108","line":35,"column":30,"nodeType":"109","messageId":"110","endLine":35,"endColumn":37},{"ruleId":"107","severity":1,"message":"111","line":35,"column":39,"nodeType":"109","messageId":"110","endLine":35,"endColumn":44},{"ruleId":"103","severity":1,"message":"129","line":46,"column":8,"nodeType":"105","endLine":46,"endColumn":36,"suggestions":"130"},{"ruleId":"103","severity":1,"message":"131","line":64,"column":8,"nodeType":"105","endLine":64,"endColumn":14,"suggestions":"132"},{"ruleId":"107","severity":1,"message":"108","line":36,"column":29,"nodeType":"109","messageId":"110","endLine":36,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":36,"column":38,"nodeType":"109","messageId":"110","endLine":36,"endColumn":43},{"ruleId":"103","severity":1,"message":"133","line":46,"column":8,"nodeType":"105","endLine":46,"endColumn":10,"suggestions":"134"},{"ruleId":"107","severity":1,"message":"135","line":34,"column":11,"nodeType":"109","messageId":"110","endLine":34,"endColumn":16},{"ruleId":"103","severity":1,"message":"136","line":44,"column":6,"nodeType":"105","endLine":44,"endColumn":8,"suggestions":"137"},{"ruleId":"103","severity":1,"message":"138","line":48,"column":6,"nodeType":"105","endLine":48,"endColumn":30,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":53,"column":49,"nodeType":"142","messageId":"143","endLine":53,"endColumn":51},{"ruleId":"107","severity":1,"message":"144","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"145","line":21,"column":6,"nodeType":"105","endLine":21,"endColumn":8,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'curveAddress' and 'injectedProvider'. Either include them or remove the dependency array.","ArrayExpression",["149"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'savedData'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'burnNeolastic'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'offlineHTML', 'props.injectedChainId', and 'wrongNetworkHTML'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'getNeolastic' and 'savedData'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'mintNeolastic'. Either include it or remove the dependency array.",["154"],["155"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["156"],"React Hook useEffect has missing dependencies: 'getNeolastics' and 'savedData'. Either include them or remove the dependency array.",["157"],"React Hook useEffect has missing dependencies: 'getCollection' and 'savedData.curve.totalEverMinted'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'props' and 'savedData'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["159"],"React Hook useEffect has a missing dependency: 'getNeolastics'. Either include it or remove the dependency array.",["160"],"'clear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadWeb3Modal'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'pollInjectedProvider'. Either include it or remove the dependency array.",["162"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array. If 'fn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"170","fix":"176"},{"desc":"166","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [curveAddress, injectedChainId, injectedProvider]",{"range":"192","text":"193"},"Update the dependencies array to be: [data, savedData]",{"range":"194","text":"195"},"Update the dependencies array to be: [savedData, props.address, props.curveSigner, burnNeolastic]",{"range":"196","text":"197"},"Update the dependencies array to be: [offlineHTML, props.hardcodedChainId, props.injectedChainId, wrongNetworkHTML]",{"range":"198","text":"199"},"Update the dependencies array to be: [getNeolastic, props.transactionsExecuted, savedData]",{"range":"200","text":"201"},"Update the dependencies array to be: [props.address, props.curveSigner, buyPrice, mintNeolastic]",{"range":"202","text":"203"},{"range":"204","text":"199"},{"range":"205","text":"195"},"Update the dependencies array to be: [getNeolastics, props.transactionsExecuted, savedData]",{"range":"206","text":"207"},"Update the dependencies array to be: [getCollection, props.transactionsExecuted, savedData.curve.totalEverMinted]",{"range":"208","text":"209"},"Update the dependencies array to be: [data, props, savedData]",{"range":"210","text":"211"},"Update the dependencies array to be: [getNeolastics]",{"range":"212","text":"213"},"Update the dependencies array to be: [loadWeb3Modal]",{"range":"214","text":"215"},"Update the dependencies array to be: [pollInjectedProvider, props.injectedProvider]",{"range":"216","text":"217"},"Update the dependencies array to be: [fn]",{"range":"218","text":"219"},[2319,2336],"[curveAddress, injectedChainId, injectedProvider]",[1714,1720],"[data, savedData]",[2977,3022],"[savedData, props.address, props.curveSigner, burnNeolastic]",[3588,3612],"[offlineHTML, props.hardcodedChainId, props.injectedChainId, wrongNetworkHTML]",[3872,3900],"[getNeolastic, props.transactionsExecuted, savedData]",[1500,1544],"[props.address, props.curveSigner, buyPrice, mintNeolastic]",[1820,1844],[1136,1142],[1335,1363],"[getNeolastics, props.transactionsExecuted, savedData]",[1222,1250],"[getCollection, props.transactionsExecuted, savedData.curve.totalEverMinted]",[1996,2002],"[data, props, savedData]",[1217,1219],"[getNeolastics]",[1148,1150],"[loadWeb3Modal]",[1245,1269],"[pollInjectedProvider, props.injectedProvider]",[510,512],"[fn]"]